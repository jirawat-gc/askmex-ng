@using PTTGC.AskMeGc.OpenAI

@* <div class="@ChatViewClasses">
    <button class="open-workspace-file-broswer-btn" @onclick="ToggleWorkspaceFileBrowserView">
        Choose File from Workspace
    </button>
    <div class="workspace-file-browser">
        <h2>Files</h2>
        <div class="row">
            @for (int i = 0; i < 5; i++)
            {
                <div class="col-6">
                    <div>{TODO: pending thumbnail image}</div>
                    <div>file name</div>
                    <img width="40" src="/icons/pdf-document-svgrepo-com.svg" />
                </div>
                <div class="col-6">
                    <div>{TODO: pending thumbnail image}</div>
                    <div>file name</div>
                    <img width="40" src="/icons/excel-document-svgrepo-com.svg" />
                </div>
            }
        </div>
    </div>
</div> *@


<div id="chatarea">

    @foreach (var item in this.ChatPrompts)
    {
        <div class="coverstaion-item-container @(item.Role) @(item.CustomType)" data-itemid="@(item.CustomId)">

            @if (item.Role == "user")
            {
                <div class="conversation-item">
                    <div class="content">
                        @(this.RenderMarkdown(item.RenderedContent))
                    </div>
                    @if (item.AttachedDocumentUri != null)
                    {
                        <a href="@item.AttachedDocumentUri" target="_blank" class="attached-document-container">
                            <img src="/icons/file-svgrepo-com.svg" /><span>@(DisplayFileName(item.AttachedDocumentUri))</span>
                        </a>
                    }
                </div>
            }
            else if (item.Role == "assistant")
            {
                <div class="conversation-item">

                    <div class="content">
                        @if (item.IsStreaming)
                        {
                            <TypingText IsTyping=@item.IsStreaming
                                        Tracker=@TypingTexts
                                        TypingDelay="0" />
                        }
                        else
                        {
                            @(this.RenderMarkdown(item.RenderedContent))
                        }
                    </div>
                </div>
            }
        </div>
    }

</div>